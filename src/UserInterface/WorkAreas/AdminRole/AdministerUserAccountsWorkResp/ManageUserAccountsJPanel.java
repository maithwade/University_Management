/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WorkAreas.AdminRole.AdministerUserAccountsWorkResp;

import Business.Business;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;


import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kal bugrara
 */
public class ManageUserAccountsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    UserAccount selecteduseraccount;


    public ManageUserAccountsJPanel(Business bz, JPanel jp) {
        CardSequencePanel = jp;
        this.business = bz;
        initComponents();
        refreshTable();

    }

    public void refreshTable() {

//clear supplier table
        int rc = UserAccountTable.getRowCount();
        int i;
        for (i = rc - 1; i >= 0; i--) {
            ((DefaultTableModel) UserAccountTable.getModel()).removeRow(i);
        }



        UserAccountDirectory uad = business.getUserAccountDirectory();

       

        for (UserAccount ua : uad.getUserAccountList()) {

            Object[] row = new Object[5];
            row[0] = ua;
            row[1] = ua.getPersonId();
            row[2] = ua.getRole();
            row[3] = ua.getStatus();
 //           row[1] = ua.getStatus(); //complete this..
 //           row[2] = ua.getLastUpdated()
 //           row[3] = 

            ((DefaultTableModel) UserAccountTable.getModel()).addRow(row);
        }

    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        lblUserAccounts = new javax.swing.JLabel();
        btnTitle = new javax.swing.JLabel();
        tblUserAccounts = new javax.swing.JScrollPane();
        UserAccountTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(null);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(30, 300, 74, 22);

        btnNext.setText("Next >>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        add(btnNext);
        btnNext.setBounds(500, 300, 80, 22);

        lblUserAccounts.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblUserAccounts.setText("User Accounts");
        add(lblUserAccounts);
        lblUserAccounts.setBounds(30, 90, 190, 19);

        btnTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnTitle.setText("Manage User Accounts");
        add(btnTitle);
        btnTitle.setBounds(21, 20, 550, 28);

        UserAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User Name", "User ID", "Role ", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UserAccountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserAccountTableMousePressed(evt);
            }
        });
        tblUserAccounts.setViewportView(UserAccountTable);
        if (UserAccountTable.getColumnModel().getColumnCount() > 0) {
            UserAccountTable.getColumnModel().getColumn(0).setResizable(false);
            UserAccountTable.getColumnModel().getColumn(1).setResizable(false);
            UserAccountTable.getColumnModel().getColumn(2).setResizable(false);
            UserAccountTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(tblUserAccounts);
        tblUserAccounts.setBounds(30, 110, 550, 130);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
 //       ((java.awt.CardLayout)CardSequencePanel.getLayout()).show(CardSequencePanel, "IdentifyEventTypes");

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        if(selecteduseraccount==null) return;
        AdminUserAccount mppd = new AdminUserAccount(selecteduseraccount, CardSequencePanel);
        CardSequencePanel.add(mppd);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }//GEN-LAST:event_btnNextActionPerformed

    private void UserAccountTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserAccountTableMousePressed
        // Extracts the row (uaser account) in the table that is selected by the user
        int size = UserAccountTable.getRowCount();
        int selectedrow = UserAccountTable.getSelectionModel().getLeadSelectionIndex();

        if (selectedrow < 0 || selectedrow > size - 1) {
            return;
        }
        selecteduseraccount = (UserAccount) UserAccountTable.getValueAt(selectedrow, 0);
        if (selecteduseraccount != null) {
            //return;
//            AdminUserAccount adminUserAccountPanel = new AdminUserAccount(selecteduseraccount, CardSequencePanel);
//            CardSequencePanel.add(adminUserAccountPanel);
//            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
//            //adminUserAccount.updateUserDetails(selecteduseraccount);  
            
//            CardSequencePanel.add(AdminUserAccount);
//            ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_UserAccountTableMousePressed
    
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UserAccountTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel btnTitle;
    private javax.swing.JLabel lblUserAccounts;
    private javax.swing.JScrollPane tblUserAccounts;
    // End of variables declaration//GEN-END:variables

}
